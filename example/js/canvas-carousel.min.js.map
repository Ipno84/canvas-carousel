{"version":3,"file":"canvas-carousel.min.js","mappings":"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","sources":["webpack://canvas-carousel/webpack/universalModuleDefinition","webpack://canvas-carousel/./src/index.ts","webpack://canvas-carousel/./src/start.ts","webpack://canvas-carousel/webpack/bootstrap","webpack://canvas-carousel/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"canvas-carousel\"] = factory();\n\telse\n\t\troot[\"canvas-carousel\"] = factory();\n})(self, () => {\nreturn ","import { CanvasCarouselOptions, IDeltas, ImageSizes } from \"./typings\"\n\nclass CanvasCarousel {\n    private _canvas: HTMLCanvasElement | null = null\n    private _context: CanvasRenderingContext2D | null | undefined = null\n    private _options: CanvasCarouselOptions = { selector: '', imagesPath: [] }\n    private _currentIndex: number = 0\n    private _resizeObserver: ResizeObserver | null = null\n    private _imagesCollection: HTMLImageElement[] = []\n    private touch: boolean = navigator.maxTouchPoints > 0;\n    private coors: { clientX?: number, x?: number } = {}\n    private canvasPosition: { deltaX?: number } = { deltaX: 0 }\n    private canvasRect?: DOMRect\n    private parentWidth: number | void = void 0\n    private resizeTimeout: ReturnType<typeof setTimeout> | null = null\n    private oldCanvasWidth?: number = void 0\n\n\tconstructor(options: CanvasCarouselOptions) {\n        this.onResize = this.onResize.bind(this)\n        this.onActionStart = this.onActionStart.bind(this)\n        this.onActionEnd = this.onActionEnd.bind(this)\n        this.onElementLeave = this.onElementLeave.bind(this)\n        this.onActionMove = this.onActionMove.bind(this)\n\n        this._options = options\n\n        this.onInit()\n    }\n\n    public get options(): CanvasCarouselOptions {\n        return this._options\n    }\n\n    public get canvas(): HTMLCanvasElement | null {\n        return this._canvas\n    }\n\n    public get context(): CanvasRenderingContext2D | null | undefined {\n        return this._context\n    }\n\n    public get currentIndex(): number {\n        return this._currentIndex\n    }\n\n    public get resizeObserver(): ResizeObserver | null {\n        return this._resizeObserver\n    }\n\n    public get imagesCollection(): HTMLImageElement[] {\n        return this._imagesCollection\n    }\n\n    /**\n     * It assign to internal canvas class property the proper value using the provided one or the selector\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private handleCanvasAssignment(): void {\n        if(this.options.node && this.options.node instanceof HTMLCanvasElement) {\n            this._canvas = this.options.node\n        } else if(this.options.selector) {\n            this._canvas = document.querySelector(this.options.selector)\n        }\n    }\n\n    /**\n     * Asyncronously initialize elements. It's triggered in constructor right after setters and method bindings\n     * It will instantiate canvas element and its context, setup sizes of the canvas itself (using options),\n     * and fetch remote images. It also trigger a resize observer that will observe the parent node of the canvas\n     * in order to fit it if options require this behaviour\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private onInit(): void {\n        this.handleCanvasAssignment()\n        this._context = this.canvas?.getContext('2d')\n\n        if(this.context) this.context.imageSmoothingEnabled = true\n        \n        this.setupSize()\n        this.prepareImages()\n\n        if(this.canvas?.parentElement) {\n            this._resizeObserver = new ResizeObserver(this.onResize);\n            this.resizeObserver?.observe(this.canvas.parentElement);\n        }\n    }\n\n    /**\n     * It will add all listeners, repeat size setup and draw image in canvas context\n     * The callback of the resize observer is triggered by default every 300 milliseconds\n     * This option can be changed during instantiation\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private onResize(): void {\n        if(this.resizeTimeout) clearTimeout(this.resizeTimeout)\n        if(this.options.aspectRatio && !this.oldCanvasWidth && this.canvas?.width) {\n            this.oldCanvasWidth = this.canvas?.width\n        }\n        this.touch = navigator.maxTouchPoints > 0\n        this.resizeTimeout = setTimeout(() => {\n            this.addListeners()\n            this.setupSize()\n            this.handleCanvasReduction()\n            this.drawImages()\n        }, this.options.resizeTimeoutReaction ?? 300)\n    }\n\n    /**\n     * Normalize canvas position on x axis form responsive point of view\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private handleCanvasReduction(): void {\n        if(this.options.aspectRatio && this.canvas && this.oldCanvasWidth) {\n            const diff = this.oldCanvasWidth - this.canvas.width\n            const percentage = ((diff * 100) / this.oldCanvasWidth) / 100\n            if(!this.canvasPosition.deltaX) this.canvasPosition.deltaX = 0\n            this.canvasPosition.deltaX = this.canvasPosition.deltaX - (this.canvasPosition.deltaX * percentage)\n            this.oldCanvasWidth = void 0\n        }\n    }\n\n    /**\n     * It will track the very first interaction with user\n     * After click or touch the method store in class members canvas rect and coordinates in order to use it in other event handlers.\n     * It will also start touch or mouse movement listener\n     *\n     * @private\n     * @param {(MouseEvent | TouchEvent)} e\n     * @memberof CanvasCarousel\n     */\n    private onActionStart(e: MouseEvent | TouchEvent): void {\n        e.preventDefault()\n        this.canvasRect = this.canvas?.getBoundingClientRect()\n        const event = this.touch && e instanceof TouchEvent ? e.touches[0] : e as MouseEvent\n        this.coors.clientX = (event.clientX - (this.canvasRect?.left ?? 0)) - (this.canvasPosition.deltaX ?? 0);\n        this.canvas?.addEventListener(this.touch ? 'touchmove' : 'mousemove', this.onActionMove)\n    }\n\n    /**\n     * It will be triggered on mouse or touch events end, it will completely destroy event handler\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private onActionEnd(): void {\n        this.canvas?.removeEventListener(this.touch ? 'touchmove' : 'mousemove', this.onActionMove)\n    }\n\n    /**\n     * Once the touch has been canceled or mouse leave the element, it triggers the end of the behaviour\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private onElementLeave(): void {\n        this.canvas?.dispatchEvent(new Event('mouseup'))\n        this.canvas?.dispatchEvent(new Event('touchend'))\n    }\n\n    /**\n     * The core of the class, it will tracks event positions in order to track delta that has to be applied during images draw.\n     * It also take care about current index (useful for external and internal purpose) and redraws images too.\n     *\n     * @private\n     * @param {(MouseEvent | TouchEvent)} e\n     * @memberof CanvasCarousel\n     */\n    private onActionMove(e: MouseEvent | TouchEvent): void {\n        e.preventDefault()\n        const lastXPosition = (-(this.canvas?.width ?? 0) * (this.options.imagesPath.length - 1))\n        const event = this.touch && e instanceof TouchEvent ? e.touches[0] : e as MouseEvent\n        this.coors.x = event.clientX - (this.canvasRect?.left ?? 0);\n        this.canvasPosition.deltaX = (this.coors.x - (this.coors.clientX ?? 0));\n        if (this.canvasPosition.deltaX > 0) {\n            this.canvasPosition.deltaX = 0;\n        } else if (this.canvasPosition.deltaX < lastXPosition ) {\n            this.canvasPosition.deltaX = lastXPosition;\n        }\n        this.setupCurrentIndex()\n        this.drawImages()\n    }\n\n    /**\n     * It set current index changes if needed\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private setupCurrentIndex(): void {\n        if(this.canvas && typeof this.canvasPosition.deltaX !== 'undefined') {\n            const nextIndex = Math.round((Math.abs(this.canvasPosition.deltaX) + this.canvas.width) / this.canvas.width) - 1\n            if (nextIndex !== this.currentIndex) {\n                this._currentIndex = nextIndex\n            }\n        }\n    }\n\n    /**\n     * In order to have always clean listeners, the method will firstly destroy every used event handlers\n     * and then it will start the proper ones again\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private addListeners(): void {\n        if(this.canvas) {\n            const start = this.touch ? 'touchstart' : 'mousedown'\n            const end = this.touch ? 'touchend' : 'mouseup'\n            const cancel = this.touch ? 'touchcancel' : 'mouseleave'\n\n            this.canvas.removeEventListener('touchstart', this.onActionStart)\n            this.canvas.removeEventListener('mousedown', this.onActionStart)\n            this.canvas.removeEventListener('touchend', this.onActionEnd)\n            this.canvas.removeEventListener('mouseup', this.onActionEnd)\n            this.canvas.removeEventListener('touchcancel', this.onElementLeave)\n            this.canvas.removeEventListener('mouseleave', this.onElementLeave)\n\n            this.canvas.addEventListener(start, this.onActionStart)\n            this.canvas.addEventListener(end, this.onActionEnd)\n            this.canvas.addEventListener(cancel, this.onElementLeave)\n        }\n    }\n\n    /**\n     * Helper method, useful to achieve parent node inner width for responsive purpose\n     *\n     * @private\n     * @param {HTMLElement} node\n     * @return {*}  {ImageSizes}\n     * @memberof CanvasCarousel\n     */\n    private innerDimensions(node: HTMLElement): ImageSizes {\n        const computedStyle = getComputedStyle(node)\n\n        let width = node.clientWidth\n        let height = node.clientHeight\n\n        height -= Number.parseFloat(computedStyle.paddingTop) + Number.parseFloat(computedStyle.paddingBottom)\n        width -= Number.parseFloat(computedStyle.paddingLeft) + Number.parseFloat(computedStyle.paddingRight)\n\n        return { height, width }\n    }\n\n    /**\n     * It will set canvas size using options. If aspectRatio option's provided it will use it to retrieve responsive behaviour\n     * If canvasHeight and canvasWidth are provided, instead, it will use it without responsive any behaviour\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private setupSize(): void {\n        if(this.canvas && this.options.aspectRatio) {\n            const parentNode = this.canvas.parentNode as HTMLElement | undefined\n            if(parentNode) {\n                this.parentWidth = this.innerDimensions(parentNode).width\n                this.canvas.width = this.parentWidth\n                this.canvas.height = this.parentWidth * this.options.aspectRatio\n            }\n        } else if(this.canvas && this.options.canvasHeight && this.options.canvasWidth) {\n            this.canvas.width = this.options.canvasWidth\n            this.canvas.height = this.options.canvasHeight\n        }\n    }\n\n    /**\n     * It fetch remote images and draw image once every image has been downloaded\n     *\n     * @private\n     * @return {*} \n     * @memberof CanvasCarousel\n     */\n    private prepareImages(): void {\n        this.options.imagesPath.forEach((src, index) => {\n            const image = new Image()\n            image.src = src\n            image.onload = () => {\n                this._imagesCollection[index] = image\n                this.drawImages()\n            }\n        })\n        \n    }\n\n    /**\n     * This method handle image aspect ratio in order to render them properly in every slide inside the canvas element\n     *\n     * @private\n     * @param {HTMLImageElement} image\n     * @return {*}  {ImageSizes}\n     * @memberof CanvasCarousel\n     */\n    private getNormalizedImageSizes(image: HTMLImageElement): ImageSizes {\n        if(this.canvas) {\n            const imageAspectRatio = image.width / image.height\n            if(imageAspectRatio > 1) {\n                return {\n                    width: this.canvas.width,\n                    height: this.canvas.width / imageAspectRatio\n                }\n            } else {\n                return {\n                    width: this.canvas.height * imageAspectRatio,\n                    height: this.canvas.height\n                }\n            }\n        }\n        return {\n            width: 0,\n            height: 0\n        }\n    }\n\n    /**\n     * This method is used to properly set images at the very center of the slide\n     *\n     * @private\n     * @param {number} width\n     * @param {number} height\n     * @return {*}  {IDeltas}\n     * @memberof CanvasCarousel\n     */\n    private getDeltas(width: number, height: number): IDeltas {\n        if(!this.canvas) {\n            return {\n                x: 0,\n                y: 0\n            }\n        }\n        return {\n            x: (this.canvas.width - width) / 2,\n            y: (this.canvas.height - height) / 2\n        }\n    }\n\n    /**\n     * Generic method the move the canvas to the provided image index\n     *\n     * @param {number} index\n     * @memberof CanvasCarousel\n     */\n    public goToIndex(index: number): void {\n        if (this.canvas && index >= 0 && index < this.options.imagesPath.length) {\n            const delta = 0 - (this.canvas.width * index)\n            this.canvasPosition.deltaX = delta\n            this.drawImages()\n            this.setupCurrentIndex()\n        }\n    }\n\n    /**\n     * It use goToIndex method to move the canvas carousel to the next slide\n     *\n     * @memberof CanvasCarousel\n     */\n    public goToNext(): void {\n        this.goToIndex(this.currentIndex + 1)\n    }\n\n    /**\n     * It use goToIndex method to move the canvas carousel to the previous slide\n     *\n     * @memberof CanvasCarousel\n     */\n    public goToPrev(): void {\n        this.goToIndex(this.currentIndex - 1)\n    }\n\n    /**\n     * It use goToIndex method to move the canvas carousel to the first slide\n     *\n     * @memberof CanvasCarousel\n     */\n     public goToFirst(): void {\n        this.goToIndex(0)\n    }\n\n    /**\n     * It use goToIndex method to move the canvas carousel to the last slide\n     *\n     * @memberof CanvasCarousel\n     */\n     public goToLast(): void {\n        this.goToIndex(this.options.imagesPath.length - 1)\n    }\n\n    /**\n     * This method will draw images in canvas context setting properly deltas, sizes and positioning\n     *\n     * @private\n     * @memberof CanvasCarousel\n     */\n    private drawImages(): void {\n        this.context?.clearRect(0, 0, this.canvas?.width ?? 0, this.canvas?.height ?? 0);\n        this._imagesCollection.forEach((image, index) => {\n            if(this.canvas) {\n                const { width, height } = this.getNormalizedImageSizes(image)\n                const { x, y } = this.getDeltas(width, height)\n                this.context?.drawImage(\n                    image,\n                    (this.canvas.width * index) + x + (this.canvasPosition.deltaX ?? 0),\n                    y,\n                    width,\n                    height\n                )\n            }\n        })\n    }\n}\n\nexport { CanvasCarousel };\n","import { CanvasCarousel } from './index';\n\nconst canvasElement = document.querySelector<HTMLCanvasElement>('#carousel');\n\nconst baseOptions = {\n\tselector: '#carousel',\n\t// node: canvasElement!,\n\timagesPath: [\n\t\t'http://challenge.publitas.com/images/0.jpg',\n\t\t'http://challenge.publitas.com/images/1.jpg',\n\t\t'http://challenge.publitas.com/images/2.jpg',\n\t\t'http://challenge.publitas.com/images/3.jpg'\n\t],\n\tresizeTimeoutReaction: 1\n};\n\nconst staticSizesOptions = {\n\t...baseOptions,\n\tcanvasWidth: 200,\n\tcanvasHeight: 200\n};\n\nconst responsiveOptions = {\n\t...baseOptions,\n\taspectRatio: 0.6\n};\n\n// if(canvasElement) {\n\nconst canvasCarousel = new CanvasCarousel(responsiveOptions);\n\nconst buttonNext = document.getElementById('next');\nconst buttonPrev = document.getElementById('prev');\nconst buttonFirst = document.getElementById('first');\nconst buttonLast = document.getElementById('last');\n\nbuttonNext?.addEventListener('click', e => {\n\te.preventDefault();\n\tcanvasCarousel.goToNext();\n});\n\nbuttonPrev?.addEventListener('click', e => {\n\te.preventDefault();\n\tcanvasCarousel.goToPrev();\n});\n\nbuttonFirst?.addEventListener('click', e => {\n\te.preventDefault();\n\tcanvasCarousel.goToIndex(0);\n});\n\nbuttonLast?.addEventListener('click', e => {\n\te.preventDefault();\n\tcanvasCarousel.goToIndex(canvasCarousel.options.imagesPath.length - 1);\n});\n// }\n\nexport {};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(221);\n"],"names":["root","factory","exports","module","define","amd","self","options","_canvas","_context","_options","selector","imagesPath","_currentIndex","_resizeObserver","_imagesCollection","touch","navigator","maxTouchPoints","coors","canvasPosition","deltaX","parentWidth","resizeTimeout","oldCanvasWidth","this","onResize","bind","onActionStart","onActionEnd","onElementLeave","onActionMove","onInit","handleCanvasAssignment","node","HTMLCanvasElement","document","querySelector","canvas","getContext","context","imageSmoothingEnabled","setupSize","prepareImages","parentElement","ResizeObserver","resizeObserver","observe","clearTimeout","aspectRatio","width","setTimeout","addListeners","handleCanvasReduction","drawImages","resizeTimeoutReaction","percentage","e","preventDefault","canvasRect","getBoundingClientRect","event","TouchEvent","touches","clientX","left","addEventListener","removeEventListener","dispatchEvent","Event","lastXPosition","length","x","setupCurrentIndex","nextIndex","Math","round","abs","currentIndex","start","end","cancel","innerDimensions","computedStyle","getComputedStyle","clientWidth","height","clientHeight","Number","parseFloat","paddingTop","paddingBottom","paddingLeft","paddingRight","parentNode","canvasHeight","canvasWidth","forEach","src","index","image","Image","onload","getNormalizedImageSizes","imageAspectRatio","getDeltas","y","goToIndex","delta","goToNext","goToPrev","goToFirst","goToLast","clearRect","drawImage","CanvasCarousel","baseOptions","responsiveOptions","canvasCarousel","buttonNext","getElementById","buttonPrev","buttonFirst","buttonLast","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}